{"version":3,"sources":["components/RouteButton.jsx","pages/Home.jsx","components/Button.jsx","components/ClearButton.jsx","components/Input.jsx","pages/Calculator.jsx","pages/About.jsx","components/TextField.jsx","components/TabButton.jsx","components/SelectorRow.jsx","unitTypes.js","pages/Convert.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["RouteButton","children","isBig","notFirst","isWide","type","className","defaultProps","Home","to","Button","val","handleClick","includes","onClick","ClearButton","handleClear","Input","input","Calculator","props","addToInput","state","setState","downHandler","e","key","handleEqual","removeChar","math","eval","error","window","addEventListener","this","removeEventListener","slice","React","Component","About","href","TextField","isOutput","isTitle","titleText","evaluateValue","disabled","value","onChange","event","undefined","TabButton","isSelected","SelectorRow","inputFunction","outputFunction","selectedInput","selectedOutput","lengthUnits","timeUnits","temperatureUnits","areaUnits","volumeUnits","weightUnits","Convert","useState","selectedType","setSelectedType","lengthInput","setLengthInput","lenghOutput","setLengthOutput","timeInput","setTimeInput","timeOutput","setTimeOutput","temperatureInput","setTemperatureInput","temperatureOutput","setTemperatureOutput","areaInput","setAreaInput","areaOutput","setAreaOutput","volumeInput","setVolumeInput","volumeOutput","setVolumeOutput","weightInput","setWeightInput","weightOutput","setWeightOutput","currentInput","setCurrentInput","areaConversions","Hectare","Acre","volumeConversions","Liter","Milliliter","Gallon","Quart","Pint","Cup","target","toLowerCase","err","convertNumber","map","cat","unit","App","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.aefba867.chunk.js","sourcesContent":["import React from 'react';\nimport './RouteButton.css';\nimport PropTypes from 'prop-types';\n\nconst RouteButton = ({ children, isBig, notFirst, isWide }) => (\n  <button\n    type=\"button\"\n    className={`${isBig ? 'routebutton-wrapper-big' : 'routebutton-wrapper-small'} ${\n      isWide && !notFirst ? 'isWide' : ''\n      } ${notFirst ? 'top-margin' : ''}`}\n  >\n    {children}\n  </button>\n);\n\nRouteButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  isBig: PropTypes.bool,\n  notFirst: PropTypes.bool,\n  isWide: PropTypes.bool,\n};\n\nRouteButton.defaultProps = {\n  isBig: false,\n  notFirst: false,\n  isWide: false,\n};\n\nexport default RouteButton;\n","import React from 'react';\nimport './Pages.css';\nimport { Link } from 'react-router-dom';\nimport RouteButton from '../components/RouteButton';\n\nconst Home = () => (\n  <div>\n    <Link className=\"link\" to=\"/about\">\n      <RouteButton> About </RouteButton>\n    </Link>\n    <div className=\"page\">\n      <div className=\"wrapper\">\n        <div className=\"header\">Select a tool.</div>\n        <Link className=\"link\" to=\"/simplecalc\">\n          <RouteButton isBig>Calculator</RouteButton>\n        </Link>\n        <Link className=\"link\" to=\"/convert\">\n          <RouteButton isBig notFirst>\n            Convert Units\n          </RouteButton>\n        </Link>\n        <div className=\"footer\">Created in July 2020 by Jan Charatan.</div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport './Button.css';\nimport PropTypes from 'prop-types';\n\nconst isOperator = (val) => ['+', '-', '*', '/'].includes(val);\n\nconst Button = ({ handleClick, children }) => (\n  <button\n    type=\"button\"\n    className={`button-wrapper ${isOperator(children) ? null : 'operator'}`}\n    onClick={() => handleClick(children)}\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport './ClearButton.css';\nimport PropTypes from 'prop-types';\n\nconst ClearButton = ({ children, handleClear }) => (\n  <button type=\"button\" className=\"reset-style clear-btn\" onClick={handleClear}>\n    {children}\n  </button>\n);\n\nClearButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  handleClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import React from 'react';\nimport './Input.css';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ input }) => <div className=\"input\">{input}</div>;\n\nInput.propTypes = {\n  input: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport './Pages.css'\nimport Button from '../components/Button';\nimport ClearButton from '../components/ClearButton';\nimport Input from '../components/Input';\nimport math from 'mathjs';\nimport RouteButton from '../components/RouteButton';\nimport { Link } from 'react-router-dom';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.downHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.downHandler);\n  }\n\n  addToInput = (val) => {\n    if (this.state.input === \"Error\" || !this.state.input) {\n      this.setState({\n        input: val\n      })\n    } else {\n      this.setState({\n        input: this.state.input + val,\n      });\n    }\n  }\n\n  downHandler = (e) => {\n    if (e.key === \"Enter\" || e.key === \"=\") {\n      this.handleEqual();\n    }\n    if (e.key === \"Backspace\") {\n      if (this.state.input === \"Error\") {\n        this.setState({\n          input: \"\"\n        })\n      }\n      this.removeChar();\n    }\n    if (e.key === \"c\" || e.key === \"C\") {\n      this.setState({\n        input: \"\"\n      })\n    }\n    const chars = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"+\", \"-\", \"/\", \"*\", \".\"];\n    if (chars.includes(e.key)) {\n      this.addToInput(e.key);\n    }\n  }\n\n  handleEqual = () => {\n    try {\n      this.setState({\n        input: math.eval(this.state.input)\n      });\n    } catch (error) {\n      this.setState({\n        input: \"Error\",\n      });\n    }\n  }\n\n  removeChar() {\n    try {\n      this.setState({\n        input: this.state.input.slice(0, -1)\n      })\n    } catch (error) {\n      this.setState({\n        input: \"\",\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Link className=\"link\" to=\"/calculator\">\n            <RouteButton> Back </RouteButton>\n          </Link>\n        </div>\n        <div className=\"page\">\n          <div className=\"wrapper\">\n            <div className=\"header\">\n              Calculator.\n          </div>\n            <div className=\"row\">\n              <Input input={this.state.input}></Input>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addToInput}>7</Button>\n              <Button handleClick={this.addToInput}>8</Button>\n              <Button handleClick={this.addToInput}>9</Button>\n              <Button handleClick={this.addToInput}>/</Button>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addToInput}>4</Button>\n              <Button handleClick={this.addToInput}>5</Button>\n              <Button handleClick={this.addToInput}>6</Button>\n              <Button handleClick={this.addToInput}>*</Button>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addToInput}>1</Button>\n              <Button handleClick={this.addToInput}>2</Button>\n              <Button handleClick={this.addToInput}>3</Button>\n              <Button handleClick={this.addToInput}>+</Button>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addToInput}>.</Button>\n              <Button handleClick={this.addToInput}>0</Button>\n              <Button handleClick={this.handleEqual}>=</Button>\n              <Button handleClick={this.addToInput}>-</Button>\n            </div>\n            <div className=\"row\">\n              <ClearButton handleClear={() => this.setState({ input: \"\" })}>Clear</ClearButton>\n            </div>\n            <div className=\"footer\">\n              Created in July 2020 by Jan Charatan.\n          </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from 'react';\nimport './Pages.css';\nimport { Link } from 'react-router-dom';\nimport RouteButton from '../components/RouteButton';\n\nconst About = () => (\n  <div>\n    <Link className=\"link\" to=\"/calculator\">\n      <RouteButton> Back </RouteButton>\n    </Link>\n    <div className=\"page\">\n      <div className=\"wrapper\">\n        <div className=\"header\">About.</div>\n        <div>\n          This web app is a multitool for doing a bunch of things. It was built by\n{' '}\n          <a href=\"http://www.jancharatan.com/\">Jan Charatan</a>, a computer science student at Pomona College using{' '}\n          <a href=\"https://www.reactjs.org\">React</a>. If you have any suggestions for a tool that should be added or\n          any comments, email Jan at jan.charatan@gmail.com or{' '}\n          <a href=\"https://github.com/jancharatan/calculator\">submit a pull request</a>.\n        </div>\n        <div className=\"footer\">Created in July 2020 by Jan Charatan.</div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport './TextField.css';\nimport PropTypes from 'prop-types';\n\nconst TextField = ({ isOutput, isTitle, titleText, evaluateValue }) => (\n  <div className=\"textfield-wrapper\">\n    <input\n      className={`textfield ${isTitle ? 'title-styling' : null}`}\n      type=\"text\"\n      disabled={isOutput}\n      value={titleText}\n      onChange={(event) => evaluateValue(event)}\n    />\n  </div>\n);\n\nTextField.propTypes = {\n  isOutput: PropTypes.bool,\n  isTitle: PropTypes.bool,\n  titleText: PropTypes.string,\n  evaluateValue: PropTypes.func,\n};\n\nTextField.defaultProps = {\n  isOutput: false,\n  isTitle: false,\n  titleText: undefined,\n  evaluateValue: undefined,\n};\n\nexport default TextField;\n","import React from 'react';\nimport './Button.css';\nimport PropTypes from 'prop-types';\n\nconst TabButton = ({ children, isSelected, handleClick }) => (\n  <button\n    type=\"button\"\n    className={`tab-button-wrapper ${isSelected ? 'tab-button-selected' : ''}`}\n    onClick={() => handleClick(children)}\n  >\n    {children}\n  </button>\n);\n\nTabButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  handleClick: PropTypes.func.isRequired,\n};\n\nTabButton.defaultProps = {\n  isSelected: false,\n};\n\nexport default TabButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TabButton from './TabButton';\nimport '../pages/Pages.css';\n\nconst SelectorRow = ({ inputFunction, outputFunction, selectedInput, selectedOutput, value }) => (\n  <div className=\"flex-helper\">\n    <TabButton handleClick={() => inputFunction(value)} isSelected={value === selectedInput}>\n      {value}\n    </TabButton>\n    <TabButton handleClick={() => outputFunction(value)} isSelected={value === selectedOutput}>\n      {value}\n    </TabButton>\n  </div>\n);\n\nSelectorRow.propTypes = {\n  inputFunction: PropTypes.func.isRequired,\n  outputFunction: PropTypes.func.isRequired,\n  value: PropTypes.func.isRequired,\n  selectedInput: PropTypes.string.isRequired,\n  selectedOutput: PropTypes.string.isRequired,\n};\n\nexport default SelectorRow;\n","export const lengthUnits = [\n  'Meter',\n  'Kilometer',\n  'Centimeter',\n  'Millimeter',\n  'Micrometer',\n  'Nanometer',\n  'Mile',\n  'Yard',\n  'Foot',\n  'Inch',\n];\n\nexport const timeUnits = [\n  'Second',\n  'Millisecond',\n  'Microsecond',\n  'Nanosecond',\n  'Picosecond',\n  'Minute',\n  'Hour',\n  'Day',\n  'Week',\n  'Month',\n  'Year',\n];\n\nexport const temperatureUnits = ['Celsius', 'Kelvin', 'Fahrenheit'];\n\nexport const areaUnits = [\n  'Square Meter',\n  'Square Kilometer',\n  'Square Centimeter',\n  'Hectare',\n  'Square Mile',\n  'Square Yard',\n  'Square Foot',\n  'Square Inch',\n  'Acre',\n];\n\nexport const volumeUnits = [\n  'Cubic Meter',\n  'Cubic Kilometer',\n  'Cubic Centimeter',\n  'Liter',\n  'Milliliter',\n  'Gallon',\n  'Quart',\n  'Pint',\n  'Cup',\n  'Fluid Ounce',\n  'Table Spoon',\n  'Tea Spoon',\n  'Cubic Yard',\n  'Cubic Foot',\n  'Cubic Inch',\n];\n\nexport const weightUnits = ['Kilogram', 'Gram', 'Milligram', 'Ton', 'Tonne', 'Pound', 'Ounce'];\n\nconst units = [lengthUnits, timeUnits, temperatureUnits, areaUnits, volumeUnits, weightUnits];\n\nexport default units;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport math from 'mathjs';\nimport RouteButton from '../components/RouteButton';\nimport './Pages.css';\nimport '../components/TextField.css';\nimport TextField from '../components/TextField';\nimport TabButton from '../components/TabButton';\nimport SelectorRow from '../components/SelectorRow';\nimport { lengthUnits, timeUnits, temperatureUnits, areaUnits, volumeUnits, weightUnits } from '../unitTypes';\n\nconst Convert = () => {\n  const [selectedType, setSelectedType] = useState('Length');\n  const [lengthInput, setLengthInput] = useState('Meter');\n  const [lenghOutput, setLengthOutput] = useState('Meter');\n  const [timeInput, setTimeInput] = useState('Second');\n  const [timeOutput, setTimeOutput] = useState('Second');\n  const [temperatureInput, setTemperatureInput] = useState('Celsius');\n  const [temperatureOutput, setTemperatureOutput] = useState('Celsius');\n  const [areaInput, setAreaInput] = useState('Square Meter');\n  const [areaOutput, setAreaOutput] = useState('Square Meter');\n  const [volumeInput, setVolumeInput] = useState('Cubic Meter');\n  const [volumeOutput, setVolumeOutput] = useState('Cubic Meter');\n  const [weightInput, setWeightInput] = useState('Kilogram');\n  const [weightOutput, setWeightOutput] = useState('Kilogram');\n  const [currentInput, setCurrentInput] = useState('');\n\n  const categories = ['Length', 'Time', 'Temperature', 'Area', 'Volume', 'Weight'];\n\n  const areaConversions = {\n    'Square Meter': 'm2',\n    'Square Kilometer': 'km2',\n    'Square Centimeter': 'cm2',\n    Hectare: 'hectare',\n    'Square Mile': 'sqmi',\n    'Square Yard': 'sqyd',\n    'Square Foot': 'sqft',\n    'Square Inch': 'sqin',\n    Acre: 'acre',\n  };\n\n  const volumeConversions = {\n    'Cubic Meter': 'm3',\n    'Cubic Kilometer': 'km3',\n    'Cubic Centimeter': 'cm3',\n    Liter: 'liter',\n    Milliliter: 'milliliter',\n    Gallon: 'gal',\n    Quart: 'qt',\n    Pint: 'pt',\n    Cup: 'cup',\n    'Fluid Ounce': 'floz',\n    'Table Spoon': 'tablespoon',\n    'Tea Spoon': 'teaspoon',\n    'Cubic Yard': 'cuyd',\n    'Cubic Foot': 'cuft',\n    'Cubic Inch': 'cuin',\n  };\n\n  const changeInput = (event) => {\n    setCurrentInput(event.target.value);\n  };\n\n  const convertNumber = () => {\n    if (!currentInput) {\n      return '';\n    }\n    if (selectedType === 'Length') {\n      try {\n        const input = `${currentInput} ${lengthInput.toLowerCase()} to ${lenghOutput.toLowerCase()}`;\n        return math.eval(input);\n      } catch (err) {\n        return 'Error';\n      }\n    } else if (selectedType === 'Time') {\n      try {\n        const input = `${currentInput} ${timeInput.toLowerCase()} to ${timeOutput.toLowerCase()}`;\n        return math.eval(input);\n      } catch (err) {\n        return 'Error';\n      }\n    } else if (selectedType === 'Temperature') {\n      try {\n        const input = `${currentInput} ${temperatureInput.toLowerCase()} to ${temperatureOutput.toLowerCase()}`;\n        return math.eval(input);\n      } catch (err) {\n        return 'Error';\n      }\n    } else if (selectedType === 'Area') {\n      try {\n        const input = `${currentInput} ${areaConversions[areaInput]} to ${areaConversions[areaOutput]}`;\n        return math.eval(input);\n      } catch (err) {\n        return 'Error';\n      }\n    } else if (selectedType === 'Volume') {\n      try {\n        const input = `${currentInput} ${volumeConversions[volumeInput]} to ${volumeConversions[volumeOutput]}`;\n        return math.eval(input);\n      } catch (err) {\n        return 'Error';\n      }\n    } else if (selectedType === 'Weight') {\n      try {\n        if (weightInput === 'Pound' && weightOutput === 'Pound') {\n          return math.eval(`${currentInput} lb to lb`);\n        }\n        if (weightInput === 'Pound') {\n          return math.eval(`${currentInput} lb to ${weightOutput.toLowerCase()}`);\n        }\n        if (weightOutput === 'Pound') {\n          return math.eval(`${currentInput} ${weightInput.toLowerCase()} to lb`);\n        }\n        const input = `${currentInput} ${weightInput.toLowerCase()} to ${weightOutput.toLowerCase()}`;\n        return math.eval(input);\n      } catch (err) {\n        return 'Error';\n      }\n    } else {\n      return 'Error';\n    }\n  };\n\n  return (\n    <div>\n      <Link className=\"link\" to=\"/calculator\">\n        <RouteButton> Back </RouteButton>\n      </Link>\n      <div className=\"page\">\n        <div className=\"wrapper\">\n          <div className=\"header\">Convert Units.</div>\n          <div>\n            <div className=\"row border-add\">\n              <TextField isOutput isTitle titleText=\"Input\" />\n            </div>\n            <div className=\"row border-add\">\n              <TextField titleText={currentInput} evaluateValue={changeInput} />\n            </div>\n            <div className=\"row border-add margin-top-row\">\n              <TextField isOutput isTitle titleText=\"Output\" />\n            </div>\n            <div className=\"row border-add\">\n              <TextField isOutput titleText={convertNumber()} />\n            </div>\n            <div className=\"row border-add margin-top-row\">\n              {categories.map((cat) => (\n                <TabButton handleClick={() => setSelectedType(cat)} isSelected={selectedType === cat}>\n                  {cat}\n                </TabButton>\n              ))}\n            </div>\n            <div className=\"row border-add\">\n              {selectedType === 'Length' ? (\n                <div className=\"width-helper\">\n                  {lengthUnits.map((unit) => (\n                    <SelectorRow\n                      value={unit}\n                      inputFunction={setLengthInput}\n                      outputFunction={setLengthOutput}\n                      selectedInput={lengthInput}\n                      selectedOutput={lenghOutput}\n                    />\n                  ))}\n                </div>\n              ) : null}\n              {selectedType === 'Time' ? (\n                <div className=\"width-helper\">\n                  {timeUnits.map((unit) => (\n                    <SelectorRow\n                      value={unit}\n                      inputFunction={setTimeInput}\n                      outputFunction={setTimeOutput}\n                      selectedInput={timeInput}\n                      selectedOutput={timeOutput}\n                    />\n                  ))}\n                </div>\n              ) : null}\n              {selectedType === 'Temperature' ? (\n                <div className=\"width-helper\">\n                  {temperatureUnits.map((unit) => (\n                    <SelectorRow\n                      value={unit}\n                      inputFunction={setTemperatureInput}\n                      outputFunction={setTemperatureOutput}\n                      selectedInput={temperatureInput}\n                      selectedOutput={temperatureOutput}\n                    />\n                  ))}\n                </div>\n              ) : null}\n              {selectedType === 'Area' ? (\n                <div className=\"width-helper\">\n                  {areaUnits.map((unit) => (\n                    <SelectorRow\n                      value={unit}\n                      inputFunction={setAreaInput}\n                      outputFunction={setAreaOutput}\n                      selectedInput={areaInput}\n                      selectedOutput={areaOutput}\n                    />\n                  ))}\n                </div>\n              ) : null}\n              {selectedType === 'Volume' ? (\n                <div className=\"width-helper\">\n                  {volumeUnits.map((unit) => (\n                    <SelectorRow\n                      value={unit}\n                      inputFunction={setVolumeInput}\n                      outputFunction={setVolumeOutput}\n                      selectedInput={volumeInput}\n                      selectedOutput={volumeOutput}\n                    />\n                  ))}\n                </div>\n              ) : null}\n              {selectedType === 'Weight' ? (\n                <div className=\"width-helper\">\n                  {weightUnits.map((unit) => (\n                    <SelectorRow\n                      value={unit}\n                      inputFunction={setWeightInput}\n                      outputFunction={setWeightOutput}\n                      selectedInput={weightInput}\n                      selectedOutput={weightOutput}\n                    />\n                  ))}\n                </div>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"footer\">Created in July 2020 by Jan Charatan.</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Convert;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Calculator from './pages/Calculator';\nimport About from './pages/About';\nimport Convert from './pages/Convert';\n\nconst App = () => (\n  <Switch>\n    <Route path=\"/calculator\" component={Home} exact />\n    <Route path=\"/about\" component={About} exact />\n    <Route path=\"/simplecalc\" component={Calculator} exact />\n    <Route path=\"/convert\" component={Convert} exact />\n  </Switch>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}